plugins {
    id 'java'
    id 'com.gradleup.shadow' version '9.0.0-beta16'
}

group = 'sharpmc.pl'
version = '1.0'

repositories {
    mavenCentral()
    maven {
        name = "papermc-repo"
        url = "https://repo.papermc.io/repository/maven-public/"
    }
    maven {
        name = "sonatype"
        url = "https://oss.sonatype.org/content/groups/public/"
    }
    maven {
        name = "panda-repository"
        url = "https://repo.panda-lang.org/releases"
    }
    maven {
        name = "okaeri-repo"
        url = "https://storehouse.okaeri.eu/repository/maven-public/"
    }
    maven {
        name = "enginehub"
        url = "https://maven.enginehub.org/repo/"
    }
}

dependencies {
    compileOnly("io.papermc.paper:paper-api:1.20.4-R0.1-SNAPSHOT")
    compileOnly("org.projectlombok:lombok:1.18.38")
    annotationProcessor("org.projectlombok:lombok:1.18.38")
    testCompileOnly("org.projectlombok:lombok:1.18.38")
    testAnnotationProcessor("org.projectlombok:lombok:1.18.38")
    compileOnly("com.fastasyncworldedit:FastAsyncWorldEdit-Core:2.12.3")
    compileOnly("com.sk89q.worldedit:worldedit-bukkit:7.3.9")
    implementation("dev.rollczi:litecommands-bukkit:3.9.7")
    implementation("eu.okaeri:okaeri-configs-serdes-bukkit:5.0.5")
    implementation("eu.okaeri:okaeri-configs-yaml-bukkit:5.0.5")
    implementation("eu.okaeri:okaeri-configs-json-gson:5.0.5")
    implementation("eu.okaeri:okaeri-configs-json-simple:5.0.5")
}

def targetJavaVersion = 21
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'

    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release.set(targetJavaVersion)
    }
}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('plugin.yml') {
        expand props
    }
}

shadowJar {
    archiveClassifier.set('')
    minimize {}
}